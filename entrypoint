#!/bin/bash
set -e

echo "inside jenkins slave"

if [ $# -eq 1 ]; then

	# if `docker run` only has one arguments, we assume user is running alternate command like `bash` to inspect the image
	exec "$@"

else

  if [ -n "${GCLOUD_ACCOUNT}" ]; then
    echo ${GCLOUD_ACCOUNT} >> /usr/local/auth.base64
    base64 -d /usr/local/auth.base64 >> /usr/local/auth.json
		export GOOGLE_APPLICATION_CREDENTIALS="/usr/local/auth.json"
    gcloud auth activate-service-account --project ${GCLOUD_PROJECT} --key-file=/usr/local/auth.json ${GCLOUD_ACCOUNT_EMAIL}
  fi

  if [ -n "${GCLOUD_ACCOUNT_FILE}" ]; then
		export GOOGLE_APPLICATION_CREDENTIALS=${GCLOUD_ACCOUNT_FILE}
    gcloud auth activate-service-account --project ${GCLOUD_PROJECT} --key-file=${GCLOUD_ACCOUNT_FILE} ${GCLOUD_ACCOUNT_EMAIL}
  fi

	if [ -n "${GCLOUD_ZONE}" ]; then
		gcloud config set compute/zone ${GCLOUD_ZONE}
	fi

  if [ ! -z "$JENKINS_URL" ]; then
  	URL="-url $JENKINS_URL"
  fi

  if [ -z "$JNLP_PROTOCOL_OPTS" ]; then
  	echo "Warning: JnlpProtocol3 is disabled by default, use JNLP_PROTOCOL_OPTS to alter the behavior"
  	JNLP_PROTOCOL_OPTS="-Dorg.jenkinsci.remoting.engine.JnlpProtocol3.disabled=true"
  fi

fi

exec java $JAVA_OPTS $JNLP_PROTOCOL_OPTS -cp /usr/share/jenkins/slave.jar hudson.remoting.jnlp.Main -headless $URL $JENKINS_SECRET $JENKINS_SLAVE
